# daily_training.py - تدريب نانو اليومي على الهجة الرياضية
import json
import random
from datetime import datetime
from riyadh_dialect_generative_module import RiyadhDialectGenerative

class DailyTrainer:
    def __init__(self, corpus_path="corpus.json"):
        self.corpus_path = corpus_path
        
    def get_todays_phrases(self):
        """جمل جديدة للتدريب اليومي بالهجة الرياضية"""
        daily_phrases_batch = [
            # محادثات يومية ومنطقية
            "صباح الخير كيف النوم",
            "الحمدلله نومة هنيئة",
            "وش فطورك اليوم",
            "شوي عيش وجبن ولبن",
            "كفو عليك فطار صحي",
            "ايه لازم ناكل زين",
            "صدقت الصحة أهم شي",
            "وش خططك اليوم",
            "عندي شغل لين العصر",
            "الله يعينك على الشغل",
            
            # ردود منطقية للسلامات
            "كيف الصحة والأولاد",
            "الحمدلله كلهم بخير",
            "الله يديم عليكم العافية",
            "آمين ويعافيك يارب",
            "سلم لي على العيال",
            "يوصل يا غالي",
            
            # محادثات الطقس
            "الجو اليوم كيف شايفه",
            "حار مرة الصراحة",
            "صح ما يتحمل بره",
            "الله يرحمنا بنسمة هوا",
            "ان شاء الله ينكسر الحر",
            "البرد أفضل من الحر",
            "ايه والله البرد أريح",
            
            # أسئلة وإجابات منطقية
            "متى موعد الغدا",
            "الساعة وحدة ونص",
            "طيب وين نتغدى",
            "عندكم مطعم تنصحون فيه",
            "في مطعم بطل جنب البيت",
            "وش أكلهم زين",
            "كبسة لحم ومندي دجاج",
            "زين يلا نروح له",
            
            # محادثات العمل
            "شلونك مع الشغل الجديد",
            "بطل والله راضي منه",
            "كيف الزملاء معك",
            "كلهم محترمين وطيبين",
            "هذا أهم شي في الشغل",
            "ايه الناس الطيبين بركة",
            
            # التسوق والشراء
            "بروح السوق تبي شي",
            "لو تشتري لي خضار",
            "وش نوع الخضار تبي",
            "طماطم وخيار وخس",
            "تمام بجيب لك",
            "تسلم ما تقصر",
            
            # المواصلات
            "وش رايك في الجسر الجديد",
            "خفف الزحمة كثير",
            "ايه صار الطريق أسرع",
            "توفر لي نص ساعة باليوم",
            "شي حلو والله",
            
            # الرياضة
            "شفت مباراة الهلال امس",
            "ايه لعبوا بطولي",
            "الهدف الثاني كان خرافي",
            "بالضبط من توقيع سالم",
            "ننتظر المباراة الجاية",
            "ان شاء الله يفوزون",
            
            # الطعام والمأكولات
            "وش رايك نطلب بيتزا",
            "فكرة حلوة انا جوعان",
            "اي نوع تحب",
            "مارجريتا أو بيبروني",
            "خذ مشكلة من الاثنين",
            "زين الفكرة",
            
            # التكنولوجيا
            "جربت التطبيق الجديد",
            "اي تطبيق تقصد",
            "اللي للتوصيل",
            "لا والله ما جربته",
            "حلو وسهل الاستخدام",
            "بحمله وأجربه",
            
            # العائلة والأصدقاء
            "الوالد كيف صحته",
            "الحمدلله في تحسن",
            "الله يشفيه ويعافيه",
            "آمين يا رب العالمين",
            "سلم لي عليه",
            "الله يعطيك العافية"
        ]
        
        # إضافة المزيد من الجمل المنطقية
        more_logical_phrases = [
            "لا اله الا الله",
            "محمد رسول الله",
            "الحمدلله رب العالمين",
            "استغفر الله العظيم",
            "بسم الله نبدا",
            "توكلت على الله",
            "ما شاء الله تبارك الله",
            "الله كريم",
            "ربنا يستر",
            "الله أعلم",
            
            # أسئلة منطقية
            "وين رايح",
            "جاي من وين",
            "متى بترجع",
            "كم الساعة الحين",
            "وش اسمك",
            "من أي منطقة انت",
            "كم عمرك",
            "متزوج ولا أعزب",
            "عندك عيال",
            "وش تشتغل",
            
            # ردود مناسبة
            "رايح البيت",
            "جاي من الشغل", 
            "بأرجع بعد ساعة",
            "الساعة الحين خمسة",
            "اسمي محمد",
            "من الرياض",
            "عمري ثلاثين سنة",
            "متزوج والحمدلله",
            "عندي ولدين وبنت",
            "اشتغل مهندس",
            
            # محادثات المناسبات
            "كل عام وانت بخير",
            "وانت طيب يا غالي",
            "العيد مبارك",
            "الله يعيده عليك بالخير",
            "ألف مبروك التخرج",
            "الله يبارك فيك",
            "مبروك الزواج",
            "الله يهنيك ويسعدك",
            "مبروك المولود الجديد",
            "الله يحفظه ويربيه لك"
        ]
        
        return daily_phrases_batch + more_logical_phrases
    
    def add_phrases_to_corpus(self, new_phrases):
        """إضافة جمل جديدة لقاعدة البيانات"""
        try:
            with open(self.corpus_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            current_sentences = data.get("sentences", [])
            print(f"عدد الجمل الحالية: {len(current_sentences)}")
            
            # إضافة الجمل الجديدة (تجنب التكرار)
            added_count = 0
            for phrase in new_phrases:
                if phrase not in current_sentences:
                    current_sentences.append(phrase)
                    added_count += 1
            
            data["sentences"] = current_sentences
            
            with open(self.corpus_path, 'w', encoding='utf-8') as f:
                json.dump(data, f, ensure_ascii=False, indent=2)
            
            print(f"تم إضافة {added_count} جملة جديدة")
            print(f"إجمالي الجمل الآن: {len(current_sentences)}")
            
        except Exception as e:
            print(f"خطأ في إضافة الجمل: {e}")
    
    def train_nano(self):
        """تدريب نانو على البيانات المحدثة"""
        print("=" * 50)
        print("بدء التدريب اليومي لنانو...")
        print("=" * 50)
        
        nano = RiyadhDialectGenerative()
        nano.train(force_retrain=True)
        
        print("تم الانتهاء من التدريب!")
        
        # اختبار سريع
        print("\n--- اختبار سريع للنموذج المحدث ---")
        test_phrases = ["صباح", "كيف", "وش", "الله", "مبروك"]
        
        for phrase in test_phrases:
            response = nano.generate_sentence(start_word=phrase)
            print(f"'{phrase}' -> {response}")
    
    def run_daily_training(self):
        """تشغيل التدريب اليومي الكامل"""
        print(f"بدء التدريب اليومي - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        
        # إضافة جمل جديدة
        new_phrases = self.get_todays_phrases()
        self.add_phrases_to_corpus(new_phrases)
        
        # إعادة تدريب النموذج
        self.train_nano()
        
        print(f"انتهى التدريب اليومي - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

if __name__ == "__main__":
    trainer = DailyTrainer()
    trainer.run_daily_training()